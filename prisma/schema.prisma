generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql" // Changed from mysql to postgresql
  relationMode = "prisma"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
}

model PensionPlan {
  id          String   @id @default(cuid())
  name        String
  type        PlanType
  description String?

  // Plan details
  accrualRate        Float?
  employerMatch      Float?
  vestingPeriodYears Int?

  // Plan rules
  retirementAge      Int
  earlyRetirementAge Int?
  bridgeBenefit      Boolean @default(false)

  // Integration details
  cppIntegration Boolean @default(true)

  // Timestamps
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  PlanComparison   PlanComparison? @relation(fields: [planComparisonId], references: [id])
  @@index([planComparisonId])
  planComparisonId String?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // Remove @db.Text
  access_token      String? // Remove @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // Remove @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

enum PlanType {
  DEFINED_BENEFIT
  DEFINED_CONTRIBUTION
  GROUP_RRSP
  CPP
  OAS
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model PlanComparison {
  id     String @id @default(cuid())
  userId String
  name   String

  // Input parameters
  currentAge     Int
  retirementAge  Int
  currentSalary  Float
  yearsOfService Int

  // Assumptions
  salaryGrowth     Float @default(0.02)
  inflationRate    Float @default(0.02)
  investmentReturn Float @default(0.06)

  // Relations
  plans PensionPlan[]

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
